#!/bin/bash
##################################################################
# This script converts audio and video files to different formats.
#
# Michael Pratt
# http://www.michael-pratt.com
#
# License: MIT
# Copyright (C) 2016 by Michael Pratt
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
##################################################################
APPNAME="Media Morfosis"
VERSION="1.0"
DIALOG=${DIALOG:- dialog}
CWD=$(pwd)
TMPDIR=$(mktemp -d -t MediaMorfosis.XXXXXX)

# Clean me up!
trap "rm -rf ${TMPDIR} && exit 0" 0 1 2 9 5 15
##################################################################
# Looks for a needed app
##################################################################
function conv_requires()
{
    local app
    for app in ${@}; do
        echo "Looking for $app"
        if ! [ "$(which $app 2> /dev/null)" ]; then
            echo "Error: $app not found"
            exit 0
        fi
    done
}

##################################################################
# Moves from $TMPDIR to $CWD
##################################################################
function conv_restore()
{
    echo "============================================"
    echo "Moving $1 to $CWD/"
    echo "============================================"
    mv ${TMPDIR}/$(basename $1) "$CWD"
}

##################################################################
# Converts wav to mp3
##################################################################
function conv_wav_mp3()
{
    conv_requires lame
    lame --preset standard ${1} -o ${1/.wav/}.mp3
    conv_restore ${1/.wav/}.mp3
}

##################################################################
# Converts wma to mp3
##################################################################
function conv_wma_mp3()
{
    conv_requires mplayer lame
    mplayer -vo null -vc dummy -af resample=44100 -ao pcm:waveheader ${1}
    lame --preset standard audiodump.wav -o ${1/.wma/}.mp3
    [ -e "audiodump.wav" ] && rm audiodump.wav
    conv_restore ${1/.wma/}.mp3
}

##################################################################
# Converts mp4 to mp3
##################################################################
function conv_mp4_mp3()
{
    conv_requires ffmpeg
    ffmpeg -i ${1} -vn -ac 2 ${1/.mp4/}.mp3
    conv_restore ${1/.mp4/}.mp3
}

##################################################################
# Converts mp4 to mp3
##################################################################
function conv_flac_mp3()
{
    conv_requires flac lame
    flac -cd "${1}" | lame -b 320 - "${1/.flac/}".mp3
    conv_restore ${1/.flac/}.mp3
}

##################################################################
# Converts mp4 to avi
##################################################################
function conv_mp4_avi()
{
    conv_requires ffmpeg
    ffmpeg -i ${1} -vcodec mpeg4 -vtag XVID -b 1200k -acodec libmp3lame -ab 128k ${1/.mp4/}.avi
    conv_restore ${1/.mp4/}.avi
}

##################################################################
# Converts mpeg to mp3
##################################################################
function conv_mpeg_mp3()
{
    conv_requires ffmpeg
    ffmpeg -i ${1} -vn -ac 2 ${1/.mpeg/}.mp3
    conv_restore ${1/.mpeg/}.mp3
}

##################################################################
# Converts mov to avi
##################################################################
function conv_mov_avi()
{
    conv_requires ffmpeg
    ffmpeg -i ${1} -g 90 -vcodec msmpeg4v2 -acodec pcm_u8 ${1/.mov/}.avi
    conv_restore ${1/.mov/}.avi
}

##################################################################
# Converts avi to flv
##################################################################
function conv_avi_flv()
{
    conv_requires ffmpeg
    #ffmpeg -i ${1} -b 1024k -s 352x264 -r 25 -acodec copy ${1/.avi/}.flv
    ffmpeg -i ${1} -b 2028k -s 640x480 -r 30 -acodec copy ${1/.avi/}.flv
    conv_restore ${1/.avi/}.flv
}

##################################################################
# Joins multiple avi files to one file
##################################################################
function conv_avi_full()
{
    conv_requires mencoder
    if [ "$#" -lt 2 ]; then
        echo "To join avi files you need to give at least 2 parameters"
        exit 1
    fi

    local filename="joined-$(date +%s)"
    mencoder -oac copy -ovc copy "$@" -o ${filename}.avi
    conv_restore ${filename}.avi
}

##################################################################
# Converts flv to mp3
##################################################################
function conv_flv_mp3()
{
    conv_requires mplayer lame
    #ffmpeg -i ${1} -acodec mpeg4 -ab 128k ${1/.flv/}.mp3
    mplayer -vo null -vc dummy -af resample=44100 -ao pcm:waveheader ${1}
    lame -b 192 audiodump.wav -o ${1/.flv/}.mp3
    [ -e "audiodump.wav" ] && rm audiodump.wav
    conv_restore ${1/.flv/}.mp3
}

##################################################################
# Converts mkv to avi
##################################################################
function conv_mkv_avi()
{
    conv_requires ffmpeg lame
    ffmpeg -i ${1} -vcodec mpeg4 -vtag XVID -b:v 4000k -acodec libmp3lame -ac 2 -g 1 ${1/.mkv/}.avi
    conv_restore ${1/.mkv/}.avi
}

##################################################################
# Converts mp3 to aac
##################################################################
function conv_mp3_aac()
{
    conv_requires ffmpeg
    ffmpeg -i ${1} -acodec libfaac -ab 128k ${1/.mp3/}.aac
    conv_restore ${1/.mp3/}.aac
}

##################################################################
# Converts flv to mp4
##################################################################
function conv_flv_mp4()
{
    conv_requires ffmpeg
    ffmpeg -i ${1} -sameq ${1/.flv/}.mp4
    conv_restore ${1/.flv/}.mp4
}

##################################################################
# Converts m4a to mp3
##################################################################
function conv_m4a_mp3()
{
    conv_requires ffmpeg lame
    ffmpeg -y -i ${1} -acodec libmp3lame -ac 2 -ab 192k ${1/.m4a/}.mp3
    conv_restore ${1/.m4a/}.mp3
}

##################################################################
# Converts the mp3 bitrate
##################################################################
function conv_mp3_bitrate()
{
    if [ -z "${2}" ]; then
        conv_alert "Please give me a bitrate! (For example 64, 192)"
        exit
    fi

    conv_requires lame id3info
    local bitrate=${2}
    local title=$(id3info ${1} | grep TIT2 | awk 'BEGIN {FS=":"}{print $2$3$4}' | sed 's/^ //')
    local artist=$(id3info ${1} | grep TPE1  | awk 'BEGIN {FS=":"}{print $2$3$4}' | sed 's/^ //')
    lame -b ${bitrate} --add-id3v2 --tt "$title" --ta "$artist" ${1} -o ${1/.mp3/}-[${bitrate}].mp3
    conv_restore ${1/.mp3/}-[${bitrate}].mp3
}

##################################################################
# Shows an anouncement dialog
##################################################################
function conv_alert()
{
    ${DIALOG} --clear --title "$APPNAME - $VERSION" \
        --backtitle "$APPNAME - $VERSION"	\
        --msgbox "$1" 15 110 2> ${TMPDIR}/alert
}

##################################################################
# Prepares files for convertion
##################################################################
function conv_prepare_file()
{
    echo "Preparing $1 for conversion...."
    if [ -e "$CWD/$1" ]; then
        cp "$CWD/$1" "$TMPDIR/"
        local rename=$(echo "$1" | tr [A-Z] [a-z] | tr ' ' '_')
        ! [ "$rename" = "$1" ] && mv "$TMPDIR/$1" "$TMPDIR/$rename"
        echo "Renaming $1 to $rename"
    else
        conv_alert "$CWD/$1 not found"
        exit 0
    fi
}

##################################################################
# searches for files ending in $1 and shows a checklist
# for selection.
##################################################################
function conv_look_extension()
{
    echo "Looking for files with extension ($1)...."
    find "${CWD}" -type f -maxdepth 1 -iname "*.$1" -printf "\"%P\" \"\" off \n" | sort > ${TMPDIR}/file_search

    if [ "$(stat -c%s ${TMPDIR}/file_search)" -eq 0 ]; then
        conv_alert "No $1 files found - Ending"
        exit 0
    fi

    ${DIALOG} --clear --title "$APPNAME - $VERSION" \
        --backtitle "$APPNAME - $VERSION" --separate-output\
        --checklist "Choose the files you want to convert:" 15 110 15 \
        --file ${TMPDIR}/file_search 2> ${TMPDIR}/files

    echo "Creating tmp files..."
    exec < ${TMPDIR}/files
    while read line; do
        conv_prepare_file "$line"
    done
    echo "================================================================"

    find "$TMPDIR" -type f -maxdepth 1 -iname "*.$1" | sort > ${TMPDIR}/file_list
}

##################################################################
# Ahora si empieza la fiesta!
##################################################################
conv_requires ${DIALOG}
[ "$(whoami)" = "root" ] && conv_alert "***  Do not run this script as root! ***" && exit 0
echo "Temp directory: $TMPDIR"
cd ${TMPDIR}
${DIALOG} --clear --title "$APPNAME - $VERSION" \
    --backtitle "$APPNAME - $VERSION" \
    --menu "What do you want to do?" 10 80 0 \
    "1"  "Change the bitrate of MP3 Files" \
    "2"  "Converts FLV to MP3" \
    "3"  "Converts WMA to MP3" \
    "4"  "Converts MP4 to MP3" \
    "5"  "Converts M4A to MP3" \
    "6"  "Converts MOV to AVI" \
    "7"  "Converts AVI to FLV" \
    "8"  "Joins AVIs to one AVI" \
    "9"  "Converts WAV to MP3" \
    "10"  "Converts MKV to AVI" \
    "11"  "Converts MP4 to AVI" \
    "12"  "Converts FLV to MP4" \
    "13"  "Converts FLAC to MP3" \
    "14"  "Converts MPEG to MP3" \
    "15"  "Converts MP3 to AAC" 2> ${TMPDIR}/choice

module=""
loop=1
args=()
case $(cat ${TMPDIR}/choice) in
    1)	${DIALOG} --clear --title "$APPNAME - $VERSION" \
        --backtitle "$APPNAME - $VERSION" \
        --inputbox "New Bitrate (Example: 64 or 192)" 15 100 2> ${TMPDIR}/bt

    if [ "$(stat -c%s ${TMPDIR}/bt)" -eq 0 ] || [ -z "$(cat ${TMPDIR}/bt | tr -d [:blank:] | egrep '^[[:digit:]]+$')" ]; then
        conv_alert "Invalid Bitrate! It must be a number!"
        exit 0
    else
        conv_look_extension mp3
        module="conv_flv_mp3"
        args+=( "$(cat ${TMPDIR}/bt | tr -d [:blank:])" )
    fi;;

2) conv_look_extension flv
    module="conv_flv_mp3" ;;

3)	conv_look_extension wma
    module="conv_wma_mp3" ;;

4)	conv_look_extension mp4
    module="conv_mp4_mp3" ;;

5)	conv_look_extension m4a
    module="conv_m4a_mp3" ;;

6)	conv_look_extension mov
    module="conv_mov_avi" ;;

7)	conv_look_extension avi
    module="conv_avi_flv" ;;

8)  conv_look_extension avi
    loop=0
    module="conv_avi_full" ;; 

9)	conv_look_extension wav
    module="conv_wav_mp3" ;;

10)	conv_look_extension mkv
    module="conv_mkv_avi" ;;

11)	conv_look_extension mp4
    module="conv_mp4_avi" ;;

12)	conv_look_extension flv
    module="conv_flv_mp4" ;;

13)	conv_look_extension flac
    module="conv_flac_mp3" ;;

14)	conv_look_extension mpeg
    module="conv_mpeg_mp3" ;;

15)	conv_look_extension mp3
    module="conv_mp3_aac" ;;

*) conv_alert "Unknown choice - Ending..." ;;
esac

[ -z "${module}" ] && exit 0
[ "$(stat -c%s ${TMPDIR}/file_list)" -eq 0 ] && conv_alert "File list missing! Sorry :(" && exit 0

files=()
for i in $(cat ${TMPDIR}/file_list); do
    if [ "${loop}" -eq 1 ]; then
        ${module} "${i}" ${args[@]}
    fi
    files+=( "${i}" )
done

if [ "${loop}" -eq "0" ] && [ "${#files[@]}" -gt 2 ]; then
    ${module} ${files[@]}
fi
