#!/bin/bash
############################################################
# Script that resizes, rotates, watermarks, rotates, flips
# and flops images.
#
# Requirements: Imagemagick.
#
# Michael Pratt
# http://www.michael-pratt.com
#
# License: MIT
# Copyright (C) 2011 by Michael Pratt <pratt@hablarmierda.net>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
##################################################################
shopt -s checkwinsize
APPNAME="Iman (Image Manager)"
VERSION="1.0"
CWD=$(pwd)
DIALOG=${DIALOG:-dialog}
TMPDIR=${TMPDIR:-$(mktemp -d -t ImageManager.XXXXXX)}

trap "iman_exit" 0 1 2 5 9 15
function iman_exit() { rm -rf ${TMPDIR}; }
#################################################################
# Check for needed binaries
#################################################################
iman_requires()
{
    local app
    for app in ${@}; do
        echo "Buscando por $app....."
        if ! [ "$(which $app 2> /dev/null)" ]; then
            echo "Paquete que debes instalar: $app (probablemente no tienes imagemagick o dialog instalados)"
            exit 0
        fi
    done
}

#################################################################
# Show a message
#################################################################
function iman_alert()
{
    ${DIALOG} --clear --title "$APPNAME - $VERSION" \
        --backtitle "$APPNAME - $VERSION"	\
        --msgbox "$1" 15 110
}

#################################################################
# Resizes the image list
#################################################################
function iman_resize()
{
    local img=${1}
    local ratio=${2}
    local name=$(basename ${img})

    ! [ -d "${CWD}/resized/" ] && mkdir "${CWD}/resized/"
    convert -strip -geometry ${ratio} ${img} "${CWD}/resized/${ratio}_${name}"
}

#################################################################
# Writes a text to a image
#################################################################
function iman_txt()
{
    local img=${1}
    local text=${2}
    local name=$(basename ${img})

    ! [ -d "${CWD}/watermarked/" ] && mkdir "${CWD}/watermarked/"
    convert -strip -fill white -box "#00000080" -gravity SouthEast -font Helvetica-Bold -pointsize 15 -annotate +0+5 "${text}" ${img} "${CWD}/watermarked/${name}"
}

#################################################################
# Draws a border for an image
#################################################################
function iman_border()
{
    local img=${1}
    local color=${2}
    local size=${3}
    local name=$(basename ${img})

    ! [ -d "${CWD}/bordered/" ] && mkdir "${CWD}/bordered/"
    convert -strip -bordercolor ${color} -border ${size}x${size} ${img} "${CWD}/bordered/${size}_${name}"
}

#################################################################
# Flips an image
#################################################################
function iman_flip()
{
    local img=${1}
    local name=$(basename ${img})

    ! [ -d "${CWD}/fliped/" ] && mkdir "${CWD}/fliped/"
    convert -strip -flip ${img} "${CWD}/fliped/${name}"
}

#################################################################
# Flops an image
#################################################################
function iman_flop()
{
    local img=${1}
    local name=$(basename ${img})

    ! [ -d "${CWD}/floped/" ] && mkdir "${CWD}/floped/"
    convert -strip -flop ${img} "${CWD}/floped/${name}"
}

#################################################################
# Rotates an image
#################################################################
function iman_rotate()
{
    local img=${1}
    local degrees=${2}
    local name=$(basename ${img})

    ! [ -d "${CWD}/rotated/" ] && mkdir "${CWD}/rotated/"
    convert -strip -rotate ${degrees} ${img} "${CWD}/rotated/${degrees}_${name}"
}

#################################################################
# Resizes the image list from percent
#################################################################
function iman_resize_percent()
{
    local img=${1}
    local ratio=${2}
    local name=$(basename ${img})

    ! [ -d "${CWD}/resized/" ] && mkdir "${CWD}/resized/"
    convert -resize ${ratio}% ${img} "${CWD}/resized/${ratio}_percent_${name}"
}

#################################################################
# Run this shit
#################################################################
iman_requires ${DIALOG} convert mogrify
! [ -e "${TMPDIR}" ] && mkdir "${TMPDIR}"

# No aguments were given so lets do it with prompts
if [ "$#" -lt "2" ]; then
    iman_alert "Hola!\n\nEste script no sobreescribe tus archivos originales! Asi que usalo con tranquilidad!\n\nPulsa Enter Para continuar"
    echo "Searching for ${extension} images"
    find -L "${CWD}" -maxdepth 1 -type f -regextype posix-egrep -iregex ".*\.(png|jpg|gif)$" -printf "\"%P\" \"\" on \n" | sort > "${TMPDIR}/images"

    if [ "$(stat -c%s ${TMPDIR}/images)" -eq 0 ]; then
        iman_alert "No se encontraron imagenes en ${CWD}"
        exit 0
    fi

    # Select the images you want to modify
    ${DIALOG} --clear --title "$APPNAME - $VERSION" \
        --backtitle "$APPNAME - $VERSION" --separate-output\
        --checklist "Escoge las imagenes que quieres modificar:" 15 110 15 \
        --file ${TMPDIR}/images 2> ${TMPDIR}/files

    clear
    cat "${TMPDIR}/files" | while read line; do
    if [ -f "$CWD/$line" ]; then
        rename=$(echo "${line}" | tr [A-Z] [a-z] | tr ' ' '_')
        echo "Preparando $line"
        echo "Normalizando $line a $rename"
        cp "${CWD}/${line}" "${TMPDIR}"

        if ! [ "${rename}" = "${line}" ]; then
            mv "${TMPDIR}/${line}" "${TMPDIR}/${rename}"
            echo "${TMPDIR}/${rename}" >> ${TMPDIR}/file_list
        else
            echo "${TMPDIR}/${line}" >> ${TMPDIR}/file_list
        fi
    fi
    done

    # Select the action you want to do with the images
    ${DIALOG} --clear --title "$APPNAME $VERSION" \
        --backtitle "$APPNAME $VERSION" \
        --menu "Que quieres hacer con las imagenes?" 10 80 0 \
        "1"  "Ajusta el tamano de las imagenes" \
        "2"  "Escribe texto en una imagen" \
        "3"  "Le pone un borde a las imagenes" \
        "4"  "Rota una imagen en los grados especificados" \
        "5"  "Voltea una imagen de izquierda a derecha" \
        "6"  "Voltea una imagen de arriba a abajo" \
        "7"  "Ajustar tamano a en porcentaje" 2> ${TMPDIR}/choice
    clear
    if [ "$(stat -c%s $TMPDIR/choice)" -eq 0 ]; then
        iman_alert "Cancelado! - Adios!"
        clear
        exit 0
    fi

    args=()
    case $(cat $TMPDIR/choice) in
        1) module="iman_resize"
           read -p "Resize ratio: " ratio
           args+=( ${ratio} ) ;;

        2) module="iman_txt"
           read -p "Your text: " text
           args+=( "${text}" ) ;;

        3) module="iman_border"
           read -p "Border Color (black): " color
           read -p "Border Size (6): " size
           args+=( "${color}" "${size}" ) ;;

        4) module="iman_rotate"
           read -p "Degrees: " degrees
           args+=( "${degrees}" ) ;;

        5) module="iman_flop" ;;

        6) module="iman_flip" ;;

        7) module="iman_resize_percent"
            read -p "Resize ratio percent (50):" ratio
            args+=( ${ratio} ) ;;
    esac

    [ -z "${module}" ] && exit 0
    [ "$(stat -c%s ${TMPDIR}/file_list)" -eq 0 ] && iman_alert "File list missing! Sorry :(" && exit 0

    for i in $(cat ${TMPDIR}/file_list); do
        if [ -e "${i}" ]; then
            echo "Procesando ${i} ..."
            ${module} "${i}" ${args[@]}
        fi
    done
fi

FILE="${1}"
FORMAT="$(echo ${2} | tr '[:upper:]' '[:lower:]')"
if ! [ -e "${FILE}" ]; then
    if [ -e "${CWD}/${FILE}" ]; then
        FILE="${CWD}/${FILE}"
    else 
        echo "${FILE} Doesnt Exist"
        exit 1
    fi
fi

echo "Converting ${FILE} to ${FILE}.${FORMAT}"
$(which convert) "${FILE}" "${FILE}.${FORMAT}"
