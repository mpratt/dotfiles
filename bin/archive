#!/bin/bash
#############################################################
# wrapper script for [un]compressing archives of all sorts
# Modified from http://pbrisbin.com:8080/bin/archive
# Autor: Michael Pratt <pratt@hablarmierda.net>
#############################################################
set -e
APPNAME="Archive"
VERSION="0.2"
CWD=$(pwd)

#############################################################
# Compress an archive
#############################################################
function compress_archive()
{
	local dst="$1"
	shift

	# warn but still clobber
	[ -e "$dst" ] && echo "warning: overwriting $dst"

	# check existence
	local src
	for src in "$@"; do
		[ -e "$src" ] || errorout "$src: not found."
	done

	case "$dst" in
		*.tbz2|*.tar.bz2) tar cvpjf "$dst" "$@"       ;;
		*.tgz|*.tar.gz)   tar cvpzf "$dst" "$@"       ;;
		*.gz)             cat "$@" | gzip > "$dst"    ;;
		*.bz2)            cat "$@" | bzip2 > "$dst"   ;;
		*.zip)            zip "$dst" "$@"             ;;
		*.7z)             7z -t7z "$dst" "$@"         ;;
		*)                tar cvpzf "$archive.tar.gz" ;; # a default
	esac
	exit $?
}

#############################################################
# Extracts an archive
#############################################################
function extract_archive()
{
	local dir="$PWD"
	local dst="$1"
	shift

	if [ "$dst" != './' ]; then
		[ -d "$dst" ] || mkdir -p "$dst"
		cd "$dst" || errorout 'failed to change directory'
	fi

	local archive
	for archive in "$@"; do
		archive="$dir/$archive"

		# check existence
		[ -e "$archive" ] || errorout "$archive: not found."

		case "$archive" in
			*.tbz2|*.tar.bz2) tar xvjf "$archive"   ;;
			*.tgz|*.tar.gz)   tar xvzf "$archive"   ;;
			*.tar)            tar xvf "$archive"    ;;
			*.gz)             gunzip "$archive"     ;;
			*.bz2)            bunzip2 "$archive"    ;;
			*.zip)            unzip "$archive"      ;;
			*.rar)            unrar x "$archive"    ;;
			*.Z)              uncompress "$archive" ;;
			*.7z)             7z x "$archive"       ;;
			*)                errorout "invalid archive: $archive" ;;
		esac
	done
	exit $?
}

function message()
{
	echo "	usage:"
	echo "		archive [ -d <archive[.ext]> ] [source] ..."
	echo "  	archive -u [ -d <directory> ] [archive] ..."
	exit 1
}

function errorout()
{
	echo "error: $*"
	echo
	exit 1
}

#############################################################
# Entry point
#############################################################
[ -z "$1" ] && message

# set defaults
dst=''
args=()
uncompress=0

# just make it easy on myself
while [ -n "$1" ]; do
  case "$1" in
    -h|--help) message         ;;
    -u|--u*)   uncompress=1 ;;
    -d|--d*)   shift; dst="$1" ;;
    -n|--n*)   shift; dst="$1" ;;
    *)         args+=( "$1" )  ;;
  esac
  shift
done

if [ "$uncompress" -eq 1 ]; then
		extract_archive "${dst:-./}" "${args[@]}"
	else
		compress_archive "${dst:-./archive.tar.gz}" "${args[@]}"
fi
