[user]
    name = Michael Pratt
    email = commits@michael-pratt.com
[color]
    branch = auto
    diff = auto
    status = auto
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
[color "status"]
    added = yellow
    changed = green
    untracked = cyan
[core]
    quotepath = false
    editor = vim
    pager = less -XRMSI
[apply]
    whitespace = fix
[alias]
    br = branch
    co = checkout
    ci = commit
    bl = blame -C
    lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative

    # Show list of files in a conflict state.
    conflict = "!git ls-files -u | awk '{print $4}' | sort -u"

    # Unstage any files that have been added to the staging area
    unstage = reset HEAD

    # Delete any branches that have been merged into maste
    #delete-merged-branches = "git branch -d `git branch --merged | grep -v '^*' | tr -d '\n'`"
    delete-merged-branches = "!git co master && git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"

    #show alias
    show-alias = "config --get-regexp alias"

    # Get the current branch name (not so useful in itself, but used in other aliases)
    branch-name = "!git rev-parse --abbrev-ref HEAD"

    # Push the current branch to the remote "origin", and set it to track the upstream branch
    publish = "!git push -u origin $(git branch-name)"

    # Delete the remote version of the current branch
    unpublish = "!git push origin :$(git branch-name)"

    # Show the diff of everything you haven't pushed yet.
    unpushed = "!git diff origin/$(git branch-name)..HEAD"

    # Ranks users by changes
    changes = "!git log --pretty=format:'%an <%ae>' | sort | uniq -c | sort -nr"

    # Get the number of commits on the current branch
    count = "rev-list HEAD --count"

    # Commits per day
    commits-per-day = "!git log --format=format:"%cd" --date=short --no-merges --all | uniq -c | awk '{ total += $1; count++ } END { print total/count }'"

    # Show what files are being ignored in the repo
    ignored = "ls-files --others --i --exclude-standard"

    # Compact a git repo
    compact = "!git reflog expire --expire=now --all && git gc --prune=now && git gc --aggressive --prune=now"

    # Cleanse your working directory with fire
    reset-with-fire = "!git reset --hard HEAD && git clean -fdx"

[push]
    default = current
