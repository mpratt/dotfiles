#!/bin/bash
# Michael Pratt
# $HOME/.bashrc

# Configuration vars
unset GREP_OPTIONS
export TERM=xterm-256color
export HISTSIZE=40000
export HISTFILESIZE=40000
export HISTTIMEFORMAT="%Y/%m/%d %H:%M "
export HISTIGNORE="&:ls:su:cat:man:cd:cp:mv:exit:clear:history"
export HISTCONTROL=ignoreboth # erasedups & ignorespace
export LS_OPTIONS="-h --color=auto --group-directories-first"

# Tweak Some Bash Stuff
shopt -s cdspell # Correct the typos in the cd command 
shopt -s dirspell # Attempts spelling correction on directory names during word completion
shopt -s histappend # The history list is appended when the shell exits, rather than overwriting the file
shopt -s extglob # Allow extended globs! For example 'rm !(*.jpg|*.gif|*.png)'
shopt -s nocaseglob # Matches filenames in a case-insensitive fashion when performing filename expansion
shopt -s checkwinsize # Checks the window size after each command and, if necessary, updates the values of LINES and COLUMNS.

# GCC tweaks
if [[ "$(uname -a | grep -i 'AMD A4')" ]]; then
    CHOST="x86_64-pc-linux-gnu"
    CFLAGS="-O2 -march=amdfam10 -mcx16 -mpopcnt -pipe"
elif [[ "$(uname -a | grep -i 'Intel(R) Core(TM)2 Duo CPU')" ]]; then
    CHOST="x86_64-pc-linux-gnu"
    CFLAGS="-march=core2 -O2 -pipe"
elif [[ "$(uname -a | grep -i 'celeron')" ]]; then
    CHOST="i686-pc-linux-gnu"
    CFLAGS="-march=pentium-m -O2 -pipe -fomit-frame-pointer"
fi

CXXFLAGS="${CFLAGS}"

# Prompt
function __exit_prompt_status {
    EXITSTATUS="$?"
    BOLD="\e[\033[1m\]"
    RED="\e[\033[0;31m\]"
    OFF="\e[\033[m\]"
    if [ "${EXITSTATUS}" -ne 0 ]; then
        echo -ne "[$(tput bold && tput setaf 1):/$(tput sgr0)]"
    fi
}

PROMPT_COMMAND=__exit_prompt_status
[ "$(whoami)" = "root" ] && PS1="\u@\h:\w\$ " || PS1="[\u@\h \W]âš¡ "

# Non root alias
if [ "$(whoami)" != "root" ]; then
   alias su="su -l"
fi

# Source common variables/settings
if [ -e "$HOME/.common.sh" ]; then
   . $HOME/.common.sh
fi

# Source local aliases
if [ -e "$HOME/.aliases.sh" ]; then
   . $HOME/.aliases.sh
fi

# Source slackware stuff
if [ -e "$HOME/.slackware.sh" ]; then
   . $HOME/.slackware.sh
fi

# Source archlinux stuff
if [ -e "$HOME/.archlinux.sh" ]; then
   . $HOME/.archlinux.sh
fi

# Source custom bashrc for a specific host
if [ -e "$HOME/.bashrc.${HOSTNAME}" ]; then
   . $HOME/.bashrc.${HOSTNAME}
fi

# Source local stuff
if [ -e "$HOME/.bashrc.local" ]; then
   . $HOME/.bashrc.local
fi

if [ -e "${HOME}/.fzf.local" ]; then  
    . ${HOME}/.fzf.local
fi
