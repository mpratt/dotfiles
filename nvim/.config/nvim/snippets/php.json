{
  "class …": {
    "prefix": "class",
    "body": [
      "class ${1:ClassName} ${2:extends ${3:AnotherClass}} ${4:implements ${5:Interface}}",
      "{",
      "\t$0",
      "}",
      ""
    ],
    "description": "Class definition"
  },
  "function __construct": {
    "prefix": "__const",
    "body": [
      "${1:public} function __construct(${2:${3:Type} \\$${4:var}${5: = ${6:null}}}) {",
      "\t\\$this->${4:var} = \\$${4:var};$0",
      "}"
    ],
    "description": "Constructor method"
  },
  "if …": {
    "prefix": "if",
    "body": ["if (${1:condition}) {", "\t${0:# code...}", "}"],
    "description": "If block"
  },
  "function …": {
    "prefix": "fun",
    "body": [
      "${1:public }function ${2:FunctionName}(${3:${4:${5:Type} }\\$${6:var}${7: = ${8:null}}})",
      "{",
      "\t${0:# code...}",
      "}"
    ],
    "description": "Function"
  },
  "else …": {
    "prefix": "else",
    "body": ["else {", "\t${0:# code...}", "}"],
    "description": "Else block"
  },
  "for …": {
    "prefix": "for",
    "body": [
      "for (\\$${1:i}=${2:0}; \\$${1:i} < $3; \\$${1:i}++) { ",
      "\t${0:# code...}",
      "}"
    ],
    "description": "For-loop"
  },
  "foreach …": {
    "prefix": "foreach",
    "body": [
      "foreach (\\$${1:variable} as \\$${2:key} ${3:=> \\$${4:value}}) {",
      "\t${0:# code...}",
      "}"
    ],
    "description": "Foreach loop"
  },
  "$this->…": {
    "prefix": "this",
    "body": "\\$this->$0;",
    "description": "$this->..."
  },
  "Throw Exception": {
    "prefix": "throw",
    "body": [
      "throw new $1Exception(${2:\"${3:Error Processing Request}\"}${4:, ${5:1}});",
      "$0"
    ],
    "description": "Throw exception"
  },
  "Try Catch Block": {
    "prefix": "try",
    "body": [
      "try {",
      "\t${1://code...}",
      "} catch (${2:\\Throwable} ${3:\\$th}) {",
      "\t${4://throw \\$th;}",
      "}"
    ],
    "description": "Try catch block"
  }
}
